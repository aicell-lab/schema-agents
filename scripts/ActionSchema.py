# generated by datamodel-codegen:
#   filename:  ActionSchema.json
#   timestamp: 2023-11-30T10:45:35+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel, Field


class SchemaField(BaseModel):
    """
    A field within an ActionSchema
    """

    field_name: str = Field(..., description="The field's name", title='Field Name')
    field_type: str = Field(
        ...,
        description="The field's type. Must be either a valid Python type or another ActionSchema defined in the team's list of action_schema.",
        title='Field Type',
    )


class ActionSchema(BaseModel):
    """
    A schema definition for classes that will be passed between actions
    """

    name: str = Field(
        ...,
        description="The schema definition's name. It should follow python class naming conventions e.g. CamelCase",
        title='Name',
    )
    fields: List[SchemaField] = Field(
        ..., description="This ActionSchema's list of SchemaFields", title='Fields'
    )
    field_descriptions: List[str] = Field(
        ...,
        description="A detailed description of each of the class's SchemaFields",
        title='Field Descriptions',
    )
    class_description: str = Field(
        ...,
        description='A detailed description of this ActionSchema',
        title='Class Description',
    )
